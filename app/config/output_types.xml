<?xml version="1.0" encoding="UTF-8"?>
<ae:configurations xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0" xmlns="http://agavi.org/agavi/config/parts/output_types/1.0">
	
	<ae:configuration>
		
		<output_types default="html">
			
			<output_type name="html">
				
				<renderers default="php">
					<renderer name="php" class="AgaviPhpRenderer">
						<ae:parameter name="assigns">
							<ae:parameter name="routing">ro</ae:parameter>
							<ae:parameter name="request">rq</ae:parameter>
							<ae:parameter name="controller">ct</ae:parameter>
							<ae:parameter name="user">us</ae:parameter>
							<ae:parameter name="translation_manager">tm</ae:parameter>
							<ae:parameter name="request_data">rd</ae:parameter>
							<ae:parameter name="view">vw</ae:parameter>
						</ae:parameter>
						<ae:parameter name="default_extension">.phtml</ae:parameter>
						<!-- this changes the name of the variable with all template attributes from the default $template to $t -->
						<ae:parameter name="var_name">t</ae:parameter>
					</renderer>
				</renderers>
				
				<layouts default="frontend">
					
					<!-- Frontend layout with a content and a decorator layer -->
					<layout name="frontend">
						<!-- content layer without further params. this means the standard template is used, i.e. the one with the same name as the current view -->
						<layer name="content" />
						<!-- decorator layer with to add top & buttom decorator -->
						<layer name="wrapper">
							<ae:parameters>
								<ae:parameter name="directory">%core.template_dir%</ae:parameter>
								<ae:parameter name="template">Wrapper</ae:parameter>
							</ae:parameters>
						</layer>
						<!-- decorator layer with the HTML skeleton, navigation etc; set to a specific template here -->
						<layer name="decorator">
							<ae:parameters>
								<ae:parameter name="directory">%core.template_dir%</ae:parameter>
								<ae:parameter name="template">Frontend</ae:parameter>
							</ae:parameters>
							<slots>
								<slot name="header" module="Widgets" action="Frontend.Header" />
								<slot name="top"	module="Widgets" action="Frontend.Header" />
								<slot name="bottom" module="Widgets" action="Frontend.Header" />
								<slot name="footer" module="Widgets" action="Frontend.Footer"/>
							</slots>
						</layer>
					</layout>

					<!-- Backend layout with a content, a decorator layer and slots -->
					<layout name="backend">
						<!-- content layer without further params. this means the standard template is used, i.e. the one with the same name as the current view -->
						<layer name="content" />
						<!-- decorator layer with the HTML skeleton, navigation etc; set to a specific template here -->
						<layer name="decorator">
							<ae:parameters>
								<ae:parameter name="directory">%core.template_dir%</ae:parameter>
								<ae:parameter name="template">Backend</ae:parameter>
							</ae:parameters>
							<slots>
								<slot name="header" module="Widgets" action="Backend.Header" />
								<slot name="menu" module="Widgets" action="Backend.Menu" />
								<slot name="footer" module="Widgets" action="Backend.Footer"/>
							</slots>
						</layer>
					</layout>

					<!-- Redirect layout to show a message after form submissions  -->
					<layout name="redirect">
						<layer name="content" />
						<!-- decorator layer with the HTML skeleton; set to a specific template here -->
						<layer name="decorator">
							<ae:parameters>
								<ae:parameter name="directory">%core.template_dir%</ae:parameter>
								<ae:parameter name="template">Redirect</ae:parameter>
							</ae:parameters>
						</layer>
					</layout>

					<!-- a simple layout with just one content layer and no decorator -->
					<layout name="simple">
						<layer name="content" />
					</layout>
					
					<!-- special layout for slots that only has a content layer to prevent the obvious infinite loop that would otherwise occur if the decorator layer has slots assigned in the layout; this is loaded automatically by ProjectBaseView::setupHtml() in case the current container is run as a slot -->
					<layout name="slot">
						<layer name="content" />
					</layout>

				</layouts>
				
				<ae:parameter name="http_headers">
					<ae:parameter name="Content-Type">text/html; charset=UTF-8</ae:parameter>
				</ae:parameter>
				
			</output_type>
			
		</output_types>
		
	</ae:configuration>
	
	<ae:configuration environment="production.*">
		
		<output_types default="html">
			
			<!-- use a different exception template in production envs -->
			<!-- others are defined in settings.xml -->
			<output_type name="html" exception_template="%core.template_dir%/exceptions/web-html.phtml" />
			
		</output_types>
		
	</ae:configuration>
	
</ae:configurations>
